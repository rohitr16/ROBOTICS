
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000031e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000031e  00000392  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000013c8  00000000  00000000  00000394  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000004be  00000000  00000000  0000175c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00001c20  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000040c  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000122  00000000  00000000  000020ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000377  00000000  00000000  000021ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00002548  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000d5  00000000  00000000  0000258c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000015a  00000000  00000000  00002661  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e1       	ldi	r30, 0x1E	; 30
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 73 00 	call	0xe6	; 0xe6 <main>
  8a:	0c 94 8d 01 	jmp	0x31a	; 0x31a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <wait>:

         int powe(int x);

         void wait(float x)
         {
	         for(int i=0;i<(int)(x*1302);i++)
  92:	20 e0       	ldi	r18, 0x00	; 0
  94:	30 ec       	ldi	r19, 0xC0	; 192
  96:	42 ea       	ldi	r20, 0xA2	; 162
  98:	54 e4       	ldi	r21, 0x44	; 68
  9a:	0e 94 02 01 	call	0x204	; 0x204 <__mulsf3>
  9e:	0e 94 a8 00 	call	0x150	; 0x150 <__fixsfsi>
  a2:	16 16       	cp	r1, r22
  a4:	17 06       	cpc	r1, r23
  a6:	54 f4       	brge	.+20     	; 0xbc <wait+0x2a>
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	90 e0       	ldi	r25, 0x00	; 0
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	23 2f       	mov	r18, r19
  b0:	2a 95       	dec	r18
  b2:	f1 f7       	brne	.-4      	; 0xb0 <wait+0x1e>
  b4:	01 96       	adiw	r24, 0x01	; 1
  b6:	86 17       	cp	r24, r22
  b8:	97 07       	cpc	r25, r23
  ba:	c9 f7       	brne	.-14     	; 0xae <wait+0x1c>
  bc:	08 95       	ret

000000be <powe>:
         }

        int powe(int x)
        {
	        int d=1;
	        for (int i=0;i<x;i++)
  be:	18 16       	cp	r1, r24
  c0:	19 06       	cpc	r1, r25
  c2:	64 f4       	brge	.+24     	; 0xdc <powe+0x1e>
  c4:	40 e0       	ldi	r20, 0x00	; 0
  c6:	50 e0       	ldi	r21, 0x00	; 0
	         }
         }

        int powe(int x)
        {
	        int d=1;
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	30 e0       	ldi	r19, 0x00	; 0
	        for (int i=0;i<x;i++)
	        {
		        d=d*2;
  cc:	22 0f       	add	r18, r18
  ce:	33 1f       	adc	r19, r19
         }

        int powe(int x)
        {
	        int d=1;
	        for (int i=0;i<x;i++)
  d0:	4f 5f       	subi	r20, 0xFF	; 255
  d2:	5f 4f       	sbci	r21, 0xFF	; 255
  d4:	48 17       	cp	r20, r24
  d6:	59 07       	cpc	r21, r25
  d8:	c9 f7       	brne	.-14     	; 0xcc <powe+0xe>
  da:	02 c0       	rjmp	.+4      	; 0xe0 <powe+0x22>
	         }
         }

        int powe(int x)
        {
	        int d=1;
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	30 e0       	ldi	r19, 0x00	; 0
	        for (int i=0;i<x;i++)
	        {
		        d=d*2;
	        }
	        return d;
        } 
  e0:	82 2f       	mov	r24, r18
  e2:	93 2f       	mov	r25, r19
  e4:	08 95       	ret

000000e6 <main>:
         }


         void main()
         {
	         DDRB=0xFF;
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	87 bb       	out	0x17, r24	; 23
  ea:	aa 24       	eor	r10, r10
  ec:	bb 24       	eor	r11, r11
	         int i,j,k,p=0;
	         j=1;

	         while(1)
	         {
		         for(i=7;i>=0;i--)
  ee:	0f 2e       	mov	r0, r31
  f0:	f7 e0       	ldi	r31, 0x07	; 7
  f2:	ef 2e       	mov	r14, r31
  f4:	ff 24       	eor	r15, r15
  f6:	f0 2d       	mov	r31, r0
	         _delay_loop_1(0);
         }


         void main()
         {
  f8:	cc 24       	eor	r12, r12
  fa:	dd 24       	eor	r13, r13
	         {
		         for(i=7;i>=0;i--)
		         {
			         for(k=0;k<=i;k++)
			         {
				         PORTB=p+(1<<k);
  fc:	01 e0       	ldi	r16, 0x01	; 1
  fe:	10 e0       	ldi	r17, 0x00	; 0
	         int i,j,k,p=0;
	         j=1;

	         while(1)
	         {
		         for(i=7;i>=0;i--)
 100:	0f 2e       	mov	r0, r31
 102:	f7 e0       	ldi	r31, 0x07	; 7
 104:	8f 2e       	mov	r8, r31
 106:	99 24       	eor	r9, r9
 108:	f0 2d       	mov	r31, r0
 10a:	20 c0       	rjmp	.+64     	; 0x14c <main+0x66>
		         {
			         for(k=0;k<=i;k++)
			         {
				         PORTB=p+(1<<k);
 10c:	c8 01       	movw	r24, r16
 10e:	0c 2e       	mov	r0, r28
 110:	02 c0       	rjmp	.+4      	; 0x116 <main+0x30>
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	0a 94       	dec	r0
 118:	e2 f7       	brpl	.-8      	; 0x112 <main+0x2c>
 11a:	8a 0d       	add	r24, r10
 11c:	88 bb       	out	0x18, r24	; 24
				         wait(.5);
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	70 e0       	ldi	r23, 0x00	; 0
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	9f e3       	ldi	r25, 0x3F	; 63
 126:	0e 94 49 00 	call	0x92	; 0x92 <wait>

	         while(1)
	         {
		         for(i=7;i>=0;i--)
		         {
			         for(k=0;k<=i;k++)
 12a:	21 96       	adiw	r28, 0x01	; 1
 12c:	ec 16       	cp	r14, r28
 12e:	fd 06       	cpc	r15, r29
 130:	6c f7       	brge	.-38     	; 0x10c <main+0x26>
			         {
				         PORTB=p+(1<<k);
				         wait(.5);
			         }
			       p=p+powe(i);  
 132:	c7 01       	movw	r24, r14
 134:	0e 94 5f 00 	call	0xbe	; 0xbe <powe>
	         int i,j,k,p=0;
	         j=1;

	         while(1)
	         {
		         for(i=7;i>=0;i--)
 138:	08 94       	sec
 13a:	e1 08       	sbc	r14, r1
 13c:	f1 08       	sbc	r15, r1
 13e:	ff 20       	and	r15, r15
 140:	1c f0       	brlt	.+6      	; 0x148 <main+0x62>
			         for(k=0;k<=i;k++)
			         {
				         PORTB=p+(1<<k);
				         wait(.5);
			         }
			       p=p+powe(i);  
 142:	a8 0e       	add	r10, r24
 144:	b9 1e       	adc	r11, r25
 146:	02 c0       	rjmp	.+4      	; 0x14c <main+0x66>
	         int i,j,k,p=0;
	         j=1;

	         while(1)
	         {
		         for(i=7;i>=0;i--)
 148:	56 01       	movw	r10, r12
 14a:	74 01       	movw	r14, r8
	         _delay_loop_1(0);
         }


         void main()
         {
 14c:	e6 01       	movw	r28, r12
 14e:	de cf       	rjmp	.-68     	; 0x10c <main+0x26>

00000150 <__fixsfsi>:
 150:	04 d0       	rcall	.+8      	; 0x15a <__fixunssfsi>
 152:	68 94       	set
 154:	b1 11       	cpse	r27, r1
 156:	50 c0       	rjmp	.+160    	; 0x1f8 <__fp_szero>
 158:	08 95       	ret

0000015a <__fixunssfsi>:
 15a:	33 d0       	rcall	.+102    	; 0x1c2 <__fp_splitA>
 15c:	88 f0       	brcs	.+34     	; 0x180 <__fixunssfsi+0x26>
 15e:	9f 57       	subi	r25, 0x7F	; 127
 160:	90 f0       	brcs	.+36     	; 0x186 <__fixunssfsi+0x2c>
 162:	b9 2f       	mov	r27, r25
 164:	99 27       	eor	r25, r25
 166:	b7 51       	subi	r27, 0x17	; 23
 168:	a0 f0       	brcs	.+40     	; 0x192 <__fixunssfsi+0x38>
 16a:	d1 f0       	breq	.+52     	; 0x1a0 <__fixunssfsi+0x46>
 16c:	66 0f       	add	r22, r22
 16e:	77 1f       	adc	r23, r23
 170:	88 1f       	adc	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	1a f0       	brmi	.+6      	; 0x17c <__fixunssfsi+0x22>
 176:	ba 95       	dec	r27
 178:	c9 f7       	brne	.-14     	; 0x16c <__fixunssfsi+0x12>
 17a:	12 c0       	rjmp	.+36     	; 0x1a0 <__fixunssfsi+0x46>
 17c:	b1 30       	cpi	r27, 0x01	; 1
 17e:	81 f0       	breq	.+32     	; 0x1a0 <__fixunssfsi+0x46>
 180:	3a d0       	rcall	.+116    	; 0x1f6 <__fp_zero>
 182:	b1 e0       	ldi	r27, 0x01	; 1
 184:	08 95       	ret
 186:	37 c0       	rjmp	.+110    	; 0x1f6 <__fp_zero>
 188:	67 2f       	mov	r22, r23
 18a:	78 2f       	mov	r23, r24
 18c:	88 27       	eor	r24, r24
 18e:	b8 5f       	subi	r27, 0xF8	; 248
 190:	39 f0       	breq	.+14     	; 0x1a0 <__fixunssfsi+0x46>
 192:	b9 3f       	cpi	r27, 0xF9	; 249
 194:	cc f3       	brlt	.-14     	; 0x188 <__fixunssfsi+0x2e>
 196:	86 95       	lsr	r24
 198:	77 95       	ror	r23
 19a:	67 95       	ror	r22
 19c:	b3 95       	inc	r27
 19e:	d9 f7       	brne	.-10     	; 0x196 <__fixunssfsi+0x3c>
 1a0:	3e f4       	brtc	.+14     	; 0x1b0 <__fixunssfsi+0x56>
 1a2:	90 95       	com	r25
 1a4:	80 95       	com	r24
 1a6:	70 95       	com	r23
 1a8:	61 95       	neg	r22
 1aa:	7f 4f       	sbci	r23, 0xFF	; 255
 1ac:	8f 4f       	sbci	r24, 0xFF	; 255
 1ae:	9f 4f       	sbci	r25, 0xFF	; 255
 1b0:	08 95       	ret

000001b2 <__fp_split3>:
 1b2:	57 fd       	sbrc	r21, 7
 1b4:	90 58       	subi	r25, 0x80	; 128
 1b6:	44 0f       	add	r20, r20
 1b8:	55 1f       	adc	r21, r21
 1ba:	59 f0       	breq	.+22     	; 0x1d2 <__fp_splitA+0x10>
 1bc:	5f 3f       	cpi	r21, 0xFF	; 255
 1be:	71 f0       	breq	.+28     	; 0x1dc <__fp_splitA+0x1a>
 1c0:	47 95       	ror	r20

000001c2 <__fp_splitA>:
 1c2:	88 0f       	add	r24, r24
 1c4:	97 fb       	bst	r25, 7
 1c6:	99 1f       	adc	r25, r25
 1c8:	61 f0       	breq	.+24     	; 0x1e2 <__fp_splitA+0x20>
 1ca:	9f 3f       	cpi	r25, 0xFF	; 255
 1cc:	79 f0       	breq	.+30     	; 0x1ec <__fp_splitA+0x2a>
 1ce:	87 95       	ror	r24
 1d0:	08 95       	ret
 1d2:	12 16       	cp	r1, r18
 1d4:	13 06       	cpc	r1, r19
 1d6:	14 06       	cpc	r1, r20
 1d8:	55 1f       	adc	r21, r21
 1da:	f2 cf       	rjmp	.-28     	; 0x1c0 <__fp_split3+0xe>
 1dc:	46 95       	lsr	r20
 1de:	f1 df       	rcall	.-30     	; 0x1c2 <__fp_splitA>
 1e0:	08 c0       	rjmp	.+16     	; 0x1f2 <__fp_splitA+0x30>
 1e2:	16 16       	cp	r1, r22
 1e4:	17 06       	cpc	r1, r23
 1e6:	18 06       	cpc	r1, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	f1 cf       	rjmp	.-30     	; 0x1ce <__fp_splitA+0xc>
 1ec:	86 95       	lsr	r24
 1ee:	71 05       	cpc	r23, r1
 1f0:	61 05       	cpc	r22, r1
 1f2:	08 94       	sec
 1f4:	08 95       	ret

000001f6 <__fp_zero>:
 1f6:	e8 94       	clt

000001f8 <__fp_szero>:
 1f8:	bb 27       	eor	r27, r27
 1fa:	66 27       	eor	r22, r22
 1fc:	77 27       	eor	r23, r23
 1fe:	cb 01       	movw	r24, r22
 200:	97 f9       	bld	r25, 7
 202:	08 95       	ret

00000204 <__mulsf3>:
 204:	0b d0       	rcall	.+22     	; 0x21c <__mulsf3x>
 206:	78 c0       	rjmp	.+240    	; 0x2f8 <__fp_round>
 208:	69 d0       	rcall	.+210    	; 0x2dc <__fp_pscA>
 20a:	28 f0       	brcs	.+10     	; 0x216 <__mulsf3+0x12>
 20c:	6e d0       	rcall	.+220    	; 0x2ea <__fp_pscB>
 20e:	18 f0       	brcs	.+6      	; 0x216 <__mulsf3+0x12>
 210:	95 23       	and	r25, r21
 212:	09 f0       	breq	.+2      	; 0x216 <__mulsf3+0x12>
 214:	5a c0       	rjmp	.+180    	; 0x2ca <__fp_inf>
 216:	5f c0       	rjmp	.+190    	; 0x2d6 <__fp_nan>
 218:	11 24       	eor	r1, r1
 21a:	ee cf       	rjmp	.-36     	; 0x1f8 <__fp_szero>

0000021c <__mulsf3x>:
 21c:	ca df       	rcall	.-108    	; 0x1b2 <__fp_split3>
 21e:	a0 f3       	brcs	.-24     	; 0x208 <__mulsf3+0x4>

00000220 <__mulsf3_pse>:
 220:	95 9f       	mul	r25, r21
 222:	d1 f3       	breq	.-12     	; 0x218 <__mulsf3+0x14>
 224:	95 0f       	add	r25, r21
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	55 1f       	adc	r21, r21
 22a:	62 9f       	mul	r22, r18
 22c:	f0 01       	movw	r30, r0
 22e:	72 9f       	mul	r23, r18
 230:	bb 27       	eor	r27, r27
 232:	f0 0d       	add	r31, r0
 234:	b1 1d       	adc	r27, r1
 236:	63 9f       	mul	r22, r19
 238:	aa 27       	eor	r26, r26
 23a:	f0 0d       	add	r31, r0
 23c:	b1 1d       	adc	r27, r1
 23e:	aa 1f       	adc	r26, r26
 240:	64 9f       	mul	r22, r20
 242:	66 27       	eor	r22, r22
 244:	b0 0d       	add	r27, r0
 246:	a1 1d       	adc	r26, r1
 248:	66 1f       	adc	r22, r22
 24a:	82 9f       	mul	r24, r18
 24c:	22 27       	eor	r18, r18
 24e:	b0 0d       	add	r27, r0
 250:	a1 1d       	adc	r26, r1
 252:	62 1f       	adc	r22, r18
 254:	73 9f       	mul	r23, r19
 256:	b0 0d       	add	r27, r0
 258:	a1 1d       	adc	r26, r1
 25a:	62 1f       	adc	r22, r18
 25c:	83 9f       	mul	r24, r19
 25e:	a0 0d       	add	r26, r0
 260:	61 1d       	adc	r22, r1
 262:	22 1f       	adc	r18, r18
 264:	74 9f       	mul	r23, r20
 266:	33 27       	eor	r19, r19
 268:	a0 0d       	add	r26, r0
 26a:	61 1d       	adc	r22, r1
 26c:	23 1f       	adc	r18, r19
 26e:	84 9f       	mul	r24, r20
 270:	60 0d       	add	r22, r0
 272:	21 1d       	adc	r18, r1
 274:	82 2f       	mov	r24, r18
 276:	76 2f       	mov	r23, r22
 278:	6a 2f       	mov	r22, r26
 27a:	11 24       	eor	r1, r1
 27c:	9f 57       	subi	r25, 0x7F	; 127
 27e:	50 40       	sbci	r21, 0x00	; 0
 280:	8a f0       	brmi	.+34     	; 0x2a4 <__mulsf3_pse+0x84>
 282:	e1 f0       	breq	.+56     	; 0x2bc <__mulsf3_pse+0x9c>
 284:	88 23       	and	r24, r24
 286:	4a f0       	brmi	.+18     	; 0x29a <__mulsf3_pse+0x7a>
 288:	ee 0f       	add	r30, r30
 28a:	ff 1f       	adc	r31, r31
 28c:	bb 1f       	adc	r27, r27
 28e:	66 1f       	adc	r22, r22
 290:	77 1f       	adc	r23, r23
 292:	88 1f       	adc	r24, r24
 294:	91 50       	subi	r25, 0x01	; 1
 296:	50 40       	sbci	r21, 0x00	; 0
 298:	a9 f7       	brne	.-22     	; 0x284 <__mulsf3_pse+0x64>
 29a:	9e 3f       	cpi	r25, 0xFE	; 254
 29c:	51 05       	cpc	r21, r1
 29e:	70 f0       	brcs	.+28     	; 0x2bc <__mulsf3_pse+0x9c>
 2a0:	14 c0       	rjmp	.+40     	; 0x2ca <__fp_inf>
 2a2:	aa cf       	rjmp	.-172    	; 0x1f8 <__fp_szero>
 2a4:	5f 3f       	cpi	r21, 0xFF	; 255
 2a6:	ec f3       	brlt	.-6      	; 0x2a2 <__mulsf3_pse+0x82>
 2a8:	98 3e       	cpi	r25, 0xE8	; 232
 2aa:	dc f3       	brlt	.-10     	; 0x2a2 <__mulsf3_pse+0x82>
 2ac:	86 95       	lsr	r24
 2ae:	77 95       	ror	r23
 2b0:	67 95       	ror	r22
 2b2:	b7 95       	ror	r27
 2b4:	f7 95       	ror	r31
 2b6:	e7 95       	ror	r30
 2b8:	9f 5f       	subi	r25, 0xFF	; 255
 2ba:	c1 f7       	brne	.-16     	; 0x2ac <__mulsf3_pse+0x8c>
 2bc:	fe 2b       	or	r31, r30
 2be:	88 0f       	add	r24, r24
 2c0:	91 1d       	adc	r25, r1
 2c2:	96 95       	lsr	r25
 2c4:	87 95       	ror	r24
 2c6:	97 f9       	bld	r25, 7
 2c8:	08 95       	ret

000002ca <__fp_inf>:
 2ca:	97 f9       	bld	r25, 7
 2cc:	9f 67       	ori	r25, 0x7F	; 127
 2ce:	80 e8       	ldi	r24, 0x80	; 128
 2d0:	70 e0       	ldi	r23, 0x00	; 0
 2d2:	60 e0       	ldi	r22, 0x00	; 0
 2d4:	08 95       	ret

000002d6 <__fp_nan>:
 2d6:	9f ef       	ldi	r25, 0xFF	; 255
 2d8:	80 ec       	ldi	r24, 0xC0	; 192
 2da:	08 95       	ret

000002dc <__fp_pscA>:
 2dc:	00 24       	eor	r0, r0
 2de:	0a 94       	dec	r0
 2e0:	16 16       	cp	r1, r22
 2e2:	17 06       	cpc	r1, r23
 2e4:	18 06       	cpc	r1, r24
 2e6:	09 06       	cpc	r0, r25
 2e8:	08 95       	ret

000002ea <__fp_pscB>:
 2ea:	00 24       	eor	r0, r0
 2ec:	0a 94       	dec	r0
 2ee:	12 16       	cp	r1, r18
 2f0:	13 06       	cpc	r1, r19
 2f2:	14 06       	cpc	r1, r20
 2f4:	05 06       	cpc	r0, r21
 2f6:	08 95       	ret

000002f8 <__fp_round>:
 2f8:	09 2e       	mov	r0, r25
 2fa:	03 94       	inc	r0
 2fc:	00 0c       	add	r0, r0
 2fe:	11 f4       	brne	.+4      	; 0x304 <__fp_round+0xc>
 300:	88 23       	and	r24, r24
 302:	52 f0       	brmi	.+20     	; 0x318 <__fp_round+0x20>
 304:	bb 0f       	add	r27, r27
 306:	40 f4       	brcc	.+16     	; 0x318 <__fp_round+0x20>
 308:	bf 2b       	or	r27, r31
 30a:	11 f4       	brne	.+4      	; 0x310 <__fp_round+0x18>
 30c:	60 ff       	sbrs	r22, 0
 30e:	04 c0       	rjmp	.+8      	; 0x318 <__fp_round+0x20>
 310:	6f 5f       	subi	r22, 0xFF	; 255
 312:	7f 4f       	sbci	r23, 0xFF	; 255
 314:	8f 4f       	sbci	r24, 0xFF	; 255
 316:	9f 4f       	sbci	r25, 0xFF	; 255
 318:	08 95       	ret

0000031a <_exit>:
 31a:	f8 94       	cli

0000031c <__stop_program>:
 31c:	ff cf       	rjmp	.-2      	; 0x31c <__stop_program>
