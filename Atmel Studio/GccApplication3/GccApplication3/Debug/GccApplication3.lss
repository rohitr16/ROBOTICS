
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000010a  0000017e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000180  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  000008d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004bd  00000000  00000000  00000958  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000118  00000000  00000000  00000e15  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000387  00000000  00000000  00000f2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000010b  00000000  00000000  000012d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e0       	ldi	r30, 0x0A	; 10
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 83 00 	jmp	0x106	; 0x106 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <avr/io.h>
#include <util/delay.h>

  main(void)
{
    DDRB=0b11111111;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	87 bb       	out	0x17, r24	; 23
	while(1)
    {
		PORTB=0b00001001;
  96:	e9 e0       	ldi	r30, 0x09	; 9
		_delay_ms(1000);
		PORTB=0b00001010;
  98:	3a e0       	ldi	r19, 0x0A	; 10
		_delay_ms(1000);
		PORTB=0b00001100;
  9a:	2c e0       	ldi	r18, 0x0C	; 12
		_delay_ms(1000);
		PORTB=0b00000110;
  9c:	96 e0       	ldi	r25, 0x06	; 6
		_delay_ms(1000);
		PORTB=0b00001000;
  9e:	88 e0       	ldi	r24, 0x08	; 8
  main(void)
{
    DDRB=0b11111111;
	while(1)
    {
		PORTB=0b00001001;
  a0:	e8 bb       	out	0x18, r30	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	4f e3       	ldi	r20, 0x3F	; 63
  a4:	5d e0       	ldi	r21, 0x0D	; 13
  a6:	63 e0       	ldi	r22, 0x03	; 3
  a8:	41 50       	subi	r20, 0x01	; 1
  aa:	50 40       	sbci	r21, 0x00	; 0
  ac:	60 40       	sbci	r22, 0x00	; 0
  ae:	e1 f7       	brne	.-8      	; 0xa8 <main+0x16>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x20>
  b2:	00 00       	nop
		_delay_ms(1000);
		PORTB=0b00001010;
  b4:	38 bb       	out	0x18, r19	; 24
  b6:	4f e3       	ldi	r20, 0x3F	; 63
  b8:	5d e0       	ldi	r21, 0x0D	; 13
  ba:	63 e0       	ldi	r22, 0x03	; 3
  bc:	41 50       	subi	r20, 0x01	; 1
  be:	50 40       	sbci	r21, 0x00	; 0
  c0:	60 40       	sbci	r22, 0x00	; 0
  c2:	e1 f7       	brne	.-8      	; 0xbc <main+0x2a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <main+0x34>
  c6:	00 00       	nop
		_delay_ms(1000);
		PORTB=0b00001100;
  c8:	28 bb       	out	0x18, r18	; 24
  ca:	4f e3       	ldi	r20, 0x3F	; 63
  cc:	5d e0       	ldi	r21, 0x0D	; 13
  ce:	63 e0       	ldi	r22, 0x03	; 3
  d0:	41 50       	subi	r20, 0x01	; 1
  d2:	50 40       	sbci	r21, 0x00	; 0
  d4:	60 40       	sbci	r22, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x3e>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x48>
  da:	00 00       	nop
		_delay_ms(1000);
		PORTB=0b00000110;
  dc:	98 bb       	out	0x18, r25	; 24
  de:	4f e3       	ldi	r20, 0x3F	; 63
  e0:	5d e0       	ldi	r21, 0x0D	; 13
  e2:	63 e0       	ldi	r22, 0x03	; 3
  e4:	41 50       	subi	r20, 0x01	; 1
  e6:	50 40       	sbci	r21, 0x00	; 0
  e8:	60 40       	sbci	r22, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <main+0x52>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x5c>
  ee:	00 00       	nop
		_delay_ms(1000);
		PORTB=0b00001000;
  f0:	88 bb       	out	0x18, r24	; 24
  f2:	4f e3       	ldi	r20, 0x3F	; 63
  f4:	5d e0       	ldi	r21, 0x0D	; 13
  f6:	63 e0       	ldi	r22, 0x03	; 3
  f8:	41 50       	subi	r20, 0x01	; 1
  fa:	50 40       	sbci	r21, 0x00	; 0
  fc:	60 40       	sbci	r22, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <main+0x66>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x70>
 102:	00 00       	nop
 104:	cd cf       	rjmp	.-102    	; 0xa0 <main+0xe>

00000106 <_exit>:
 106:	f8 94       	cli

00000108 <__stop_program>:
 108:	ff cf       	rjmp	.-2      	; 0x108 <__stop_program>
