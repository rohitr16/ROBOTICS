
USER_APPLICATION7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000018e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000018e  00000202  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000020c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000b0  00000000  00000000  00000960  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000656  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001d8  00000000  00000000  00001066  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008bf  00000000  00000000  0000123e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001b00  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000013c  00000000  00000000  00001b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fb  00000000  00000000  00001cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macinfo 0000fab7  00000000  00000000  00001daf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00011866  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	42 c0       	rjmp	.+132    	; 0x8a <__bad_interrupt>
   6:	00 00       	nop
   8:	40 c0       	rjmp	.+128    	; 0x8a <__bad_interrupt>
   a:	00 00       	nop
   c:	3e c0       	rjmp	.+124    	; 0x8a <__bad_interrupt>
   e:	00 00       	nop
  10:	3c c0       	rjmp	.+120    	; 0x8a <__bad_interrupt>
  12:	00 00       	nop
  14:	3a c0       	rjmp	.+116    	; 0x8a <__bad_interrupt>
  16:	00 00       	nop
  18:	38 c0       	rjmp	.+112    	; 0x8a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	36 c0       	rjmp	.+108    	; 0x8a <__bad_interrupt>
  1e:	00 00       	nop
  20:	34 c0       	rjmp	.+104    	; 0x8a <__bad_interrupt>
  22:	00 00       	nop
  24:	32 c0       	rjmp	.+100    	; 0x8a <__bad_interrupt>
  26:	00 00       	nop
  28:	30 c0       	rjmp	.+96     	; 0x8a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2e c0       	rjmp	.+92     	; 0x8a <__bad_interrupt>
  2e:	00 00       	nop
  30:	2c c0       	rjmp	.+88     	; 0x8a <__bad_interrupt>
  32:	00 00       	nop
  34:	2a c0       	rjmp	.+84     	; 0x8a <__bad_interrupt>
  36:	00 00       	nop
  38:	28 c0       	rjmp	.+80     	; 0x8a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	26 c0       	rjmp	.+76     	; 0x8a <__bad_interrupt>
  3e:	00 00       	nop
  40:	24 c0       	rjmp	.+72     	; 0x8a <__bad_interrupt>
  42:	00 00       	nop
  44:	22 c0       	rjmp	.+68     	; 0x8a <__bad_interrupt>
  46:	00 00       	nop
  48:	20 c0       	rjmp	.+64     	; 0x8a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1e c0       	rjmp	.+60     	; 0x8a <__bad_interrupt>
  4e:	00 00       	nop
  50:	1c c0       	rjmp	.+56     	; 0x8a <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e8       	ldi	r30, 0x8E	; 142
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 36       	cpi	r26, 0x68	; 104
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0d d0       	rcall	.+26     	; 0xa2 <main>
  88:	80 c0       	rjmp	.+256    	; 0x18a <_exit>

0000008a <__bad_interrupt>:
  8a:	ba cf       	rjmp	.-140    	; 0x0 <__vectors>

0000008c <cmd>:
	}	 
}

unsigned int cmd(unsigned int cd)
{
	PORTA=cd;
  8c:	8b bb       	out	0x1b, r24	; 27
	PORTB=(0<<PB0)|(0<<PB1)|(1<<PB2);
  8e:	84 e0       	ldi	r24, 0x04	; 4
  90:	88 bb       	out	0x18, r24	; 24
	
	PORTB=(0<<PB0)|(0<<PB1)|(0<<PB2);
  92:	18 ba       	out	0x18, r1	; 24
	return ;
}
  94:	08 95       	ret

00000096 <dat>:
unsigned int dat(unsigned int dt)
{
	PORTA=dt;
  96:	8b bb       	out	0x1b, r24	; 27
	PORTB=(1<<PB0)|(0<<PB1)|(1<<PB2);
  98:	85 e0       	ldi	r24, 0x05	; 5
  9a:	88 bb       	out	0x18, r24	; 24
	
	PORTB=(1<<PB0)|(0<<PB1)|(0<<PB2);
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	88 bb       	out	0x18, r24	; 24
	return ;
  a0:	08 95       	ret

000000a2 <main>:

unsigned int cmd(unsigned int cd);
unsigned int dat(unsigned int dt);

 main (void)
{
  a2:	cf 93       	push	r28
  a4:	df 93       	push	r29
  a6:	cd b7       	in	r28, 0x3d	; 61
  a8:	de b7       	in	r29, 0x3e	; 62
  aa:	27 97       	sbiw	r28, 0x07	; 7
  ac:	0f b6       	in	r0, 0x3f	; 63
  ae:	f8 94       	cli
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	0f be       	out	0x3f, r0	; 63
  b4:	cd bf       	out	0x3d, r28	; 61
	DDRA=0xFF;
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xFF;
  ba:	87 bb       	out	0x17, r24	; 23
	int i=0,j=0,g=0;
	unsigned char a[7]="DIGNIFY";
  bc:	de 01       	movw	r26, r28
  be:	11 96       	adiw	r26, 0x01	; 1
  c0:	e0 e6       	ldi	r30, 0x60	; 96
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	87 e0       	ldi	r24, 0x07	; 7
  c6:	01 90       	ld	r0, Z+
  c8:	0d 92       	st	X+, r0
  ca:	81 50       	subi	r24, 0x01	; 1
  cc:	e1 f7       	brne	.-8      	; 0xc6 <main+0x24>
	cmd(0x38);
  ce:	88 e3       	ldi	r24, 0x38	; 56
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	dc df       	rcall	.-72     	; 0x8c <cmd>
  d4:	87 ea       	ldi	r24, 0xA7	; 167
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d6:	91 e6       	ldi	r25, 0x61	; 97
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x36>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x3c>
  de:	00 00       	nop
  e0:	81 e0       	ldi	r24, 0x01	; 1
	_delay_ms(100);
    cmd(0x01);
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	d3 df       	rcall	.-90     	; 0x8c <cmd>
  e6:	e7 ea       	ldi	r30, 0xA7	; 167
  e8:	f1 e6       	ldi	r31, 0x61	; 97
  ea:	31 97       	sbiw	r30, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <main+0x48>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x4e>
  f0:	00 00       	nop
  f2:	8e e0       	ldi	r24, 0x0E	; 14
  f4:	90 e0       	ldi	r25, 0x00	; 0
	_delay_ms(100);
	cmd(0x0E);
  f6:	ca df       	rcall	.-108    	; 0x8c <cmd>
  f8:	87 ea       	ldi	r24, 0xA7	; 167
  fa:	91 e6       	ldi	r25, 0x61	; 97
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <main+0x5a>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x60>
 102:	00 00       	nop
 104:	86 e0       	ldi	r24, 0x06	; 6
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	c1 df       	rcall	.-126    	; 0x8c <cmd>
	_delay_ms(100);
	cmd(0x06);
 10a:	e7 ea       	ldi	r30, 0xA7	; 167
 10c:	f1 e6       	ldi	r31, 0x61	; 97
 10e:	31 97       	sbiw	r30, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0x6c>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0x72>
 114:	00 00       	nop
 116:	8e 01       	movw	r16, r28
 118:	0f 5f       	subi	r16, 0xFF	; 255
 11a:	1f 4f       	sbci	r17, 0xFF	; 255
 11c:	ee 24       	eor	r14, r14
 11e:	ff 24       	eor	r15, r15
 120:	f8 01       	movw	r30, r16
 122:	81 91       	ld	r24, Z+

 main (void)
{
	DDRA=0xFF;
	DDRB=0xFF;
	int i=0,j=0,g=0;
 124:	8f 01       	movw	r16, r30
 126:	90 e0       	ldi	r25, 0x00	; 0
	cmd(0x06);
	_delay_ms(100);
	while(i<7)
	{
		
		dat(a[i]);
 128:	b6 df       	rcall	.-148    	; 0x96 <dat>
 12a:	87 ea       	ldi	r24, 0xA7	; 167
 12c:	91 e6       	ldi	r25, 0x61	; 97
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <main+0x8c>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0x92>
 134:	00 00       	nop
 136:	08 94       	sec
 138:	e1 1c       	adc	r14, r1
 13a:	f1 1c       	adc	r15, r1
 13c:	97 e0       	ldi	r25, 0x07	; 7
 13e:	e9 16       	cp	r14, r25
		_delay_ms(100);
		i++;
 140:	f1 04       	cpc	r15, r1
 142:	71 f7       	brne	.-36     	; 0x120 <main+0x7e>
 144:	00 e0       	ldi	r16, 0x00	; 0
	_delay_ms(100);
	cmd(0x0E);
	_delay_ms(100);
	cmd(0x06);
	_delay_ms(100);
	while(i<7)
 146:	10 e0       	ldi	r17, 0x00	; 0
 148:	0b c0       	rjmp	.+22     	; 0x160 <main+0xbe>
 14a:	0f 5f       	subi	r16, 0xFF	; 255
 14c:	1f 4f       	sbci	r17, 0xFF	; 255
 14e:	8c e1       	ldi	r24, 0x1C	; 28
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	9c df       	rcall	.-200    	; 0x8c <cmd>
	while(1)
	{
		
	   while(j<9 && g==0)
	   {
		 j++;
 154:	e7 ea       	ldi	r30, 0xA7	; 167
 156:	f1 e6       	ldi	r31, 0x61	; 97
		 cmd(0x1C);
 158:	31 97       	sbiw	r30, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <main+0xb6>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0xbc>
 15e:	00 00       	nop
 160:	09 30       	cpi	r16, 0x09	; 9
 162:	11 05       	cpc	r17, r1
 164:	94 f3       	brlt	.-28     	; 0x14a <main+0xa8>
 166:	10 16       	cp	r1, r16
 168:	11 06       	cpc	r1, r17
 16a:	d4 f7       	brge	.-12     	; 0x160 <main+0xbe>
		i++;
	}
	while(1)
	{
		
	   while(j<9 && g==0)
 16c:	01 50       	subi	r16, 0x01	; 1
 16e:	10 40       	sbci	r17, 0x00	; 0
 170:	88 e1       	ldi	r24, 0x18	; 24
		 cmd(0x1C);
		 _delay_ms(100);
		 
	   }
	   g=1;
	   while(j>0 && g==1)
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	8b df       	rcall	.-234    	; 0x8c <cmd>
 176:	87 ea       	ldi	r24, 0xA7	; 167
	   {
		 j--;
 178:	91 e6       	ldi	r25, 0x61	; 97
 17a:	01 97       	sbiw	r24, 0x01	; 1
		 cmd(0x18);
 17c:	f1 f7       	brne	.-4      	; 0x17a <main+0xd8>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0xde>
 180:	00 00       	nop
 182:	01 15       	cp	r16, r1
 184:	11 05       	cpc	r17, r1
 186:	91 f7       	brne	.-28     	; 0x16c <main+0xca>
 188:	eb cf       	rjmp	.-42     	; 0x160 <main+0xbe>

0000018a <_exit>:
 18a:	f8 94       	cli

0000018c <__stop_program>:
 18c:	ff cf       	rjmp	.-2      	; 0x18c <__stop_program>
