
rohit15.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000186  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000001da  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000003b3  00000000  00000000  00000215  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000f7  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000030a  00000000  00000000  000006bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000009cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000cc  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000988  00000000  00000000  00000ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00001440  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1c c0       	rjmp	.+56     	; 0x3a <__ctors_end>
   2:	36 c0       	rjmp	.+108    	; 0x70 <__bad_interrupt>
   4:	35 c0       	rjmp	.+106    	; 0x70 <__bad_interrupt>
   6:	34 c0       	rjmp	.+104    	; 0x70 <__bad_interrupt>
   8:	33 c0       	rjmp	.+102    	; 0x70 <__bad_interrupt>
   a:	32 c0       	rjmp	.+100    	; 0x70 <__bad_interrupt>
   c:	31 c0       	rjmp	.+98     	; 0x70 <__bad_interrupt>
   e:	30 c0       	rjmp	.+96     	; 0x70 <__bad_interrupt>
  10:	2f c0       	rjmp	.+94     	; 0x70 <__bad_interrupt>
  12:	2e c0       	rjmp	.+92     	; 0x70 <__bad_interrupt>
  14:	2d c0       	rjmp	.+90     	; 0x70 <__bad_interrupt>
  16:	2c c0       	rjmp	.+88     	; 0x70 <__bad_interrupt>
  18:	2b c0       	rjmp	.+86     	; 0x70 <__bad_interrupt>
  1a:	2a c0       	rjmp	.+84     	; 0x70 <__bad_interrupt>
  1c:	29 c0       	rjmp	.+82     	; 0x70 <__bad_interrupt>
  1e:	28 c0       	rjmp	.+80     	; 0x70 <__bad_interrupt>
  20:	27 c0       	rjmp	.+78     	; 0x70 <__bad_interrupt>
  22:	26 c0       	rjmp	.+76     	; 0x70 <__bad_interrupt>
  24:	25 c0       	rjmp	.+74     	; 0x70 <__bad_interrupt>
  26:	4b c0       	rjmp	.+150    	; 0xbe <main+0x4c>
  28:	55 c0       	rjmp	.+170    	; 0xd4 <main+0x62>
  2a:	5d c0       	rjmp	.+186    	; 0xe6 <main+0x74>
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <main+0x86>
  2e:	6d c0       	rjmp	.+218    	; 0x10a <main+0x98>
  30:	75 c0       	rjmp	.+234    	; 0x11c <main+0xaa>
  32:	7d c0       	rjmp	.+250    	; 0x12e <main+0xbc>
  34:	85 c0       	rjmp	.+266    	; 0x140 <main+0xce>
  36:	8d c0       	rjmp	.+282    	; 0x152 <main+0xe0>
  38:	95 c0       	rjmp	.+298    	; 0x164 <main+0xf2>

0000003a <__ctors_end>:
  3a:	11 24       	eor	r1, r1
  3c:	1f be       	out	0x3f, r1	; 63
  3e:	cf e5       	ldi	r28, 0x5F	; 95
  40:	d4 e0       	ldi	r29, 0x04	; 4
  42:	de bf       	out	0x3e, r29	; 62
  44:	cd bf       	out	0x3d, r28	; 61

00000046 <__do_copy_data>:
  46:	10 e0       	ldi	r17, 0x00	; 0
  48:	a0 e6       	ldi	r26, 0x60	; 96
  4a:	b0 e0       	ldi	r27, 0x00	; 0
  4c:	e6 e8       	ldi	r30, 0x86	; 134
  4e:	f1 e0       	ldi	r31, 0x01	; 1
  50:	02 c0       	rjmp	.+4      	; 0x56 <.do_copy_data_start>

00000052 <.do_copy_data_loop>:
  52:	05 90       	lpm	r0, Z+
  54:	0d 92       	st	X+, r0

00000056 <.do_copy_data_start>:
  56:	a0 36       	cpi	r26, 0x60	; 96
  58:	b1 07       	cpc	r27, r17
  5a:	d9 f7       	brne	.-10     	; 0x52 <.do_copy_data_loop>

0000005c <__do_clear_bss>:
  5c:	10 e0       	ldi	r17, 0x00	; 0
  5e:	a0 e6       	ldi	r26, 0x60	; 96
  60:	b0 e0       	ldi	r27, 0x00	; 0
  62:	01 c0       	rjmp	.+2      	; 0x66 <.do_clear_bss_start>

00000064 <.do_clear_bss_loop>:
  64:	1d 92       	st	X+, r1

00000066 <.do_clear_bss_start>:
  66:	a0 36       	cpi	r26, 0x60	; 96
  68:	b1 07       	cpc	r27, r17
  6a:	e1 f7       	brne	.-8      	; 0x64 <.do_clear_bss_loop>
  6c:	02 d0       	rcall	.+4      	; 0x72 <main>
  6e:	89 c0       	rjmp	.+274    	; 0x182 <_exit>

00000070 <__bad_interrupt>:
  70:	c7 cf       	rjmp	.-114    	; 0x0 <__vectors>

00000072 <main>:
#include<avr/io.h>
#include<util/delay.h>
main()
{
  72:	cf 92       	push	r12
  74:	df 92       	push	r13
  76:	ef 92       	push	r14
  78:	ff 92       	push	r15
  7a:	0f 93       	push	r16
  7c:	1f 93       	push	r17
DDRD=0b11111110;
  7e:	8e ef       	ldi	r24, 0xFE	; 254
  80:	81 bb       	out	0x11, r24	; 17
DDRB=0b00011110;
  82:	8e e1       	ldi	r24, 0x1E	; 30
  84:	87 bb       	out	0x17, r24	; 23
PORTB=0b00011110;
  86:	88 bb       	out	0x18, r24	; 24
  88:	40 e0       	ldi	r20, 0x00	; 0
  8a:	50 e0       	ldi	r21, 0x00	; 0
{
for(x=0;x<=9;x++)
{
switch(x)
{
case 0:PORTD=0b11111100;
  8c:	7c ef       	ldi	r23, 0xFC	; 252
  8e:	c7 2e       	mov	r12, r23
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  90:	29 e1       	ldi	r18, 0x19	; 25
  92:	30 e0       	ldi	r19, 0x00	; 0
       _delay_ms(1000);
	    break;
case 8:PORTD=0b11111110;
       _delay_ms(1000);
	   break;
case 9:PORTD=0b11110110;
  94:	66 ef       	ldi	r22, 0xF6	; 246
  96:	d6 2e       	mov	r13, r22
       _delay_ms(1000);
	    break;
case 7:PORTD=0b11100000;
       _delay_ms(1000);
	    break;
case 8:PORTD=0b11111110;
  98:	9e ef       	ldi	r25, 0xFE	; 254
  9a:	e9 2e       	mov	r14, r25
       _delay_ms(1000);
	    break;
case 6:PORTD=0b10111110;
       _delay_ms(1000);
	    break;
case 7:PORTD=0b11100000;
  9c:	80 ee       	ldi	r24, 0xE0	; 224
  9e:	f8 2e       	mov	r15, r24
       _delay_ms(1000);
	    break;
case 5:PORTD=0b10110110;
       _delay_ms(1000);
	    break;
case 6:PORTD=0b10111110;
  a0:	0e eb       	ldi	r16, 0xBE	; 190
       _delay_ms(1000);
	    break;
case 4:PORTD=0b01100110;
       _delay_ms(1000);
	    break;
case 5:PORTD=0b10110110;
  a2:	16 eb       	ldi	r17, 0xB6	; 182
       _delay_ms(1000);
	    break;
case 3:PORTD=0b11110010;
       _delay_ms(1000);
	    break;
case 4:PORTD=0b01100110;
  a4:	b6 e6       	ldi	r27, 0x66	; 102
       _delay_ms(1000);
	    break;
case 2:PORTD=0b11011010;
       _delay_ms(1000);
	    break;
case 3:PORTD=0b11110010;
  a6:	a2 ef       	ldi	r26, 0xF2	; 242
       _delay_ms(1000);
        break;
case 1:PORTD=0b01100000;
       _delay_ms(1000);
	    break;
case 2:PORTD=0b11011010;
  a8:	7a ed       	ldi	r23, 0xDA	; 218
switch(x)
{
case 0:PORTD=0b11111100;
       _delay_ms(1000);
        break;
case 1:PORTD=0b01100000;
  aa:	60 e6       	ldi	r22, 0x60	; 96
  ac:	65 c0       	rjmp	.+202    	; 0x178 <main+0x106>
int x;
while(1)
{
for(x=0;x<=9;x++)
{
switch(x)
  ae:	fa 01       	movw	r30, r20
  b0:	4a 30       	cpi	r20, 0x0A	; 10
  b2:	51 05       	cpc	r21, r1
  b4:	08 f0       	brcs	.+2      	; 0xb8 <main+0x46>
  b6:	5e c0       	rjmp	.+188    	; 0x174 <main+0x102>
  b8:	ed 5e       	subi	r30, 0xED	; 237
  ba:	ff 4f       	sbci	r31, 0xFF	; 255
  bc:	09 94       	ijmp
{
case 0:PORTD=0b11111100;
  be:	c2 ba       	out	0x12, r12	; 18
  c0:	80 e1       	ldi	r24, 0x10	; 16
  c2:	97 e2       	ldi	r25, 0x27	; 39
  c4:	f9 01       	movw	r30, r18
  c6:	31 97       	sbiw	r30, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <main+0x54>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ca:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  cc:	d9 f7       	brne	.-10     	; 0xc4 <main+0x52>
  ce:	40 e0       	ldi	r20, 0x00	; 0
  d0:	50 e0       	ldi	r21, 0x00	; 0
  d2:	50 c0       	rjmp	.+160    	; 0x174 <main+0x102>
       _delay_ms(1000);
        break;
case 1:PORTD=0b01100000;
  d4:	62 bb       	out	0x12, r22	; 18
  d6:	80 e1       	ldi	r24, 0x10	; 16
  d8:	97 e2       	ldi	r25, 0x27	; 39
  da:	f9 01       	movw	r30, r18
  dc:	31 97       	sbiw	r30, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <main+0x6a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  e0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  e2:	d9 f7       	brne	.-10     	; 0xda <main+0x68>
  e4:	47 c0       	rjmp	.+142    	; 0x174 <main+0x102>
       _delay_ms(1000);
	    break;
case 2:PORTD=0b11011010;
  e6:	72 bb       	out	0x12, r23	; 18
  e8:	80 e1       	ldi	r24, 0x10	; 16
  ea:	97 e2       	ldi	r25, 0x27	; 39
  ec:	f9 01       	movw	r30, r18
  ee:	31 97       	sbiw	r30, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <main+0x7c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  f2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  f4:	d9 f7       	brne	.-10     	; 0xec <main+0x7a>
  f6:	3e c0       	rjmp	.+124    	; 0x174 <main+0x102>
       _delay_ms(1000);
	    break;
case 3:PORTD=0b11110010;
  f8:	a2 bb       	out	0x12, r26	; 18
  fa:	80 e1       	ldi	r24, 0x10	; 16
  fc:	97 e2       	ldi	r25, 0x27	; 39
  fe:	f9 01       	movw	r30, r18
 100:	31 97       	sbiw	r30, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x8e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 104:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 106:	d9 f7       	brne	.-10     	; 0xfe <main+0x8c>
 108:	35 c0       	rjmp	.+106    	; 0x174 <main+0x102>
       _delay_ms(1000);
	    break;
case 4:PORTD=0b01100110;
 10a:	b2 bb       	out	0x12, r27	; 18
 10c:	80 e1       	ldi	r24, 0x10	; 16
 10e:	97 e2       	ldi	r25, 0x27	; 39
 110:	f9 01       	movw	r30, r18
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <main+0xa0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 116:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 118:	d9 f7       	brne	.-10     	; 0x110 <main+0x9e>
 11a:	2c c0       	rjmp	.+88     	; 0x174 <main+0x102>
       _delay_ms(1000);
	    break;
case 5:PORTD=0b10110110;
 11c:	12 bb       	out	0x12, r17	; 18
 11e:	80 e1       	ldi	r24, 0x10	; 16
 120:	97 e2       	ldi	r25, 0x27	; 39
 122:	f9 01       	movw	r30, r18
 124:	31 97       	sbiw	r30, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <main+0xb2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 128:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 12a:	d9 f7       	brne	.-10     	; 0x122 <main+0xb0>
 12c:	23 c0       	rjmp	.+70     	; 0x174 <main+0x102>
       _delay_ms(1000);
	    break;
case 6:PORTD=0b10111110;
 12e:	02 bb       	out	0x12, r16	; 18
 130:	80 e1       	ldi	r24, 0x10	; 16
 132:	97 e2       	ldi	r25, 0x27	; 39
 134:	f9 01       	movw	r30, r18
 136:	31 97       	sbiw	r30, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <main+0xc4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 13a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 13c:	d9 f7       	brne	.-10     	; 0x134 <main+0xc2>
 13e:	1a c0       	rjmp	.+52     	; 0x174 <main+0x102>
       _delay_ms(1000);
	    break;
case 7:PORTD=0b11100000;
 140:	f2 ba       	out	0x12, r15	; 18
 142:	80 e1       	ldi	r24, 0x10	; 16
 144:	97 e2       	ldi	r25, 0x27	; 39
 146:	f9 01       	movw	r30, r18
 148:	31 97       	sbiw	r30, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0xd6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 14c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 14e:	d9 f7       	brne	.-10     	; 0x146 <main+0xd4>
 150:	11 c0       	rjmp	.+34     	; 0x174 <main+0x102>
       _delay_ms(1000);
	    break;
case 8:PORTD=0b11111110;
 152:	e2 ba       	out	0x12, r14	; 18
 154:	80 e1       	ldi	r24, 0x10	; 16
 156:	97 e2       	ldi	r25, 0x27	; 39
 158:	f9 01       	movw	r30, r18
 15a:	31 97       	sbiw	r30, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <main+0xe8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 15e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 160:	d9 f7       	brne	.-10     	; 0x158 <main+0xe6>
 162:	08 c0       	rjmp	.+16     	; 0x174 <main+0x102>
       _delay_ms(1000);
	   break;
case 9:PORTD=0b11110110;
 164:	d2 ba       	out	0x12, r13	; 18
 166:	80 e1       	ldi	r24, 0x10	; 16
 168:	97 e2       	ldi	r25, 0x27	; 39
 16a:	f9 01       	movw	r30, r18
 16c:	31 97       	sbiw	r30, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <main+0xfa>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 170:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 172:	d9 f7       	brne	.-10     	; 0x16a <main+0xf8>
DDRB=0b00011110;
PORTB=0b00011110;
int x;
while(1)
{
for(x=0;x<=9;x++)
 174:	4f 5f       	subi	r20, 0xFF	; 255
 176:	5f 4f       	sbci	r21, 0xFF	; 255
 178:	4a 30       	cpi	r20, 0x0A	; 10
 17a:	51 05       	cpc	r21, r1
 17c:	0c f0       	brlt	.+2      	; 0x180 <main+0x10e>
 17e:	9f cf       	rjmp	.-194    	; 0xbe <main+0x4c>
 180:	96 cf       	rjmp	.-212    	; 0xae <main+0x3c>

00000182 <_exit>:
 182:	f8 94       	cli

00000184 <__stop_program>:
 184:	ff cf       	rjmp	.-2      	; 0x184 <__stop_program>
